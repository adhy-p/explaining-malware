#/usr/bin/python3

import os
import subprocess

CWD = ""
IDA_PATH = "/opt/idapro/ida64"
INPUT_DIR = "../inputs/"
OUTPUT_DIR = "../outputs/"

def process_malware(malware: str):
    # If the output folder exists, skip analysing the malware
    dir_exists = subprocess.run(f"test -e {OUTPUT_DIR}{malware}", shell=True)
    if dir_exists.returncode == 0:
        print(f"output directory exists. skipping {malware}.")
        return None

    final_out_dir = f"{OUTPUT_DIR}{malware}/"
    intermediate_out_dir = f"{final_out_dir}/intermediate_outputs/"
    subprocess.run(f"mkdir -p {intermediate_out_dir}", shell=True)

    # Generate CFG using IDA
    subprocess.run(f"{IDA_PATH} -A -S\"{CWD}/ida_cfg_gen.py {intermediate_out_dir}\" {INPUT_DIR}{malware}", shell=True)
    subprocess.run(f"rm {INPUT_DIR}{malware}.idb", shell=True) # For now, manually remove the .idb file 

    # Generate list of malware capabilities using CAPA
    # subprocess.run(f"capa -j {INPUT_DIR}/{malware} > {intermediate_out_dir}capabilities.json", shell=True)

    # [Testing] Convert the list of malware capabilities to the correct format
    # subprocess.run(f"python3 capa_parser.py {intermediate_out_dir}capabilities.json", shell=True)

    # Generate the behavior graph
    # subprocess.run(f"python3 behavior_graph_gen.py {intermediate_out_dir} {final_out_dir}", shell=True)


def main():
    global CWD
    CWD = os.getcwd()
    for malware in os.listdir(INPUT_DIR):
        print(f"Analysing {malware}")
        process_malware(malware)

if __name__ == "__main__":
    main()
