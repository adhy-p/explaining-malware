#/usr/bin/python3

import os
import subprocess
import sys

CWD = ""
IDA_PATH = "/opt/idapro/ida"
INPUT_DIR = "../inputs/"
OUTPUT_DIR = "../outputs/"

REMOTE = True

def process_malware(malware: str):
    global REMOTE

    final_out_dir = f"{OUTPUT_DIR}{malware}/"
    intermediate_out_dir = f"{final_out_dir}/intermediate_outputs/"

    if REMOTE:
        ## If the output folder exists, skip analysing the malware
        dir_exists = subprocess.run(f"test -e {OUTPUT_DIR}{malware}", shell=True)
        if dir_exists.returncode == 0:
            print(f"output directory exists. skipping {malware}.")
            return None
        subprocess.run(f"mkdir -p {intermediate_out_dir}", shell=True)

        # Generate CFG using IDA
        subprocess.run(f"{IDA_PATH} -A -S\"{CWD}/ida_cfg_gen.py {intermediate_out_dir}\" {INPUT_DIR}{malware}", shell=True)
        subprocess.run(f"rm {INPUT_DIR}{malware}.idb", shell=True) # For now, manually remove the .idb file 
    else:
        # Generate list of malware capabilities using CAPA
        subprocess.run(f"capa -j {INPUT_DIR}/{malware} > {intermediate_out_dir}capabilities.json", shell=True)

        # [Testing] Convert the list of malware capabilities to the correct format
        # subprocess.run(f"python3 capa_parser.py {intermediate_out_dir}capabilities.json", shell=True)

        # Generate the behavior graph
        subprocess.run(f"python3 behavior_graph_gen.py {intermediate_out_dir} {final_out_dir}", shell=True)
    return None

def main():
    global CWD
    CWD = os.getcwd()
    if len(sys.argv) > 1:
        malware = sys.argv[1]
        print(f"Analysing {malware}")
        process_malware(malware)
    else:
        for malware in os.listdir(INPUT_DIR):
            print(f"Analysing {malware}")
            process_malware(malware)

if __name__ == "__main__":
    main()
